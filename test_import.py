import streamlit as st

# Configuration de la page - DOIT √äTRE LE PREMIER APPEL √Ä STREAMLIT
st.set_page_config(
    page_title="Test App",
    page_icon="üß™",
    layout="wide"
)

st.title("Test d'importation de Scraper")

# Test d'importation du scraper officiel
st.subheader("1. Test de google-play-scraper")
try:
    from google_play_scraper import search, app, reviews, suggestions
    st.success("‚úÖ L'importation de google-play-scraper a r√©ussi!")
    st.write("Version install√©e:", getattr(search, "__version__", "Inconnue"))
    
    # Afficher les fonctions disponibles
    st.code("""
    from google_play_scraper import search, app, reviews, suggestions
    
    # Rechercher des applications
    results = search("fitness tracker", lang="fr", country="fr")
    
    # Obtenir les d√©tails d'une application
    details = app("com.example.app", lang="fr", country="fr")
    
    # R√©cup√©rer les avis
    reviews_result, continuation_token = reviews("com.example.app", lang="fr", country="fr")
    
    # Obtenir des suggestions de recherche
    sugg = suggestions("app", lang="fr", country="fr")
    """)
    
except ImportError as e:
    st.error(f"‚ùå Erreur d'importation du scraper officiel: {str(e)}")

# Test d'importation du scraper personnalis√©
st.subheader("2. Test de notre scraper personnalis√©")
try:
    from scrapers.play_scraper import search as custom_search, __version__ as custom_version
    st.success("‚úÖ L'importation du scraper personnalis√© a r√©ussi!")
    st.write("Version du scraper personnalis√©:", custom_version)
    
    # Tester une fonction du scraper personnalis√©
    st.subheader("Test de fonctionnalit√©")
    with st.spinner("Recherche de suggestions pour 'app'..."):
        suggestions = custom_search("app", n_hits=3)
        st.write("R√©sultats de recherche pour 'app':", suggestions)
        
    if suggestions:
        st.success("Le scraper personnalis√© fonctionne correctement!")
    else:
        st.warning("Le scraper personnalis√© n'a retourn√© aucun r√©sultat.")
        
except ImportError as e:
    st.error(f"‚ùå Erreur d'importation du scraper personnalis√©: {str(e)}")
    st.info("Assurez-vous que le dossier 'scrapers' est pr√©sent dans le m√™me r√©pertoire que ce script.")

# Informations syst√®me
st.subheader("Informations syst√®me")
import sys
st.write(f"Python version: {sys.version}")
st.write(f"Executable path: {sys.executable}")

# Lister tous les packages install√©s
st.subheader("Packages install√©s")
try:
    import subprocess
    installed_packages = subprocess.check_output([sys.executable, "-m", "pip", "freeze"]).decode("utf-8")
    st.code(installed_packages)
except Exception as e:
    st.error(f"Impossible de lister les packages: {str(e)}")

# R√©capitulatif
st.subheader("R√©capitulatif")
st.markdown("""
### Diagnostic:

Si vous voyez l'un des scrapers import√© avec succ√®s, votre application devrait fonctionner correctement.

#### Pr√©f√©rence d'utilisation:
1. Scraper officiel (google-play-scraper) - Donn√©es r√©elles
2. Scraper personnalis√© (scrapers.play_scraper) - Donn√©es simul√©es
3. Mode d√©mo - Si aucun scraper n'est disponible

### Que faire maintenant?
- Si les tests r√©ussissent, d√©ployez la version principale de l'application
- Si l'import √©choue, v√©rifiez les instructions dans DEPLOYMENT.md
""")